:py:mod:`raid`
==============

.. py:module:: raid


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   raid.AntiRaid



Functions
~~~~~~~~~

.. autoapisummary::

   raid.setup



Attributes
~~~~~~~~~~

.. autoapisummary::

   raid.log


.. py:data:: log
   

   

.. py:class:: AntiRaid(bot)

   Bases: :py:obj:`discord.ext.commands.Cog`

   The base class that all cogs must inherit from.

   A cog is a collection of commands, listeners, and optional state to
   help group commands together. More information on them can be found on
   the :ref:`ext_commands_cogs` page.

   When inheriting from this class, the options shown in :class:`CogMeta`
   are equally valid here.

   .. py:method:: display_emoji(self)
      :property:


   .. py:method:: database_class_antiraid(self)
      :async:


   .. py:method:: database_class_mentionspam(self)
      :async:


   .. py:method:: cleanup(self)
      :async:


   .. py:method:: add_and_check_data(self, dict_to_add, ctx, type_database = 'antiraid')
      :async:


   .. py:method:: bulk_send_messages(self)
      :async:


   .. py:method:: get_guild_config(self, guild_id, type_database = 'antiraid')
      :async:


   .. py:method:: check_raid(self, config, guild_id, member, message)
      :async:


   .. py:method:: on_message(self, message)
      :async:


   .. py:method:: on_member_join(self, member)
      :async:


   .. py:method:: raid(self, ctx)
      :async:

      Controls raid mode on the server.
      Calling this command with no arguments will show the current raid
      mode information.
      You must have Manage Server permissions to use this command or
      its subcommands.


   .. py:method:: raid_on(self, ctx, *, channel = None)
      :async:

      Enables basic raid mode on the server.
      When enabled, server verification level is set to table flip
      levels and allows the bot to broadcast new members joining
      to a specified channel.
      If no channel is given, then the bot will broadcast join
      messages on the channel this command was used in.


   .. py:method:: disable_raid_mode(self, guild_id)
      :async:


   .. py:method:: raid_off(self, ctx)
      :async:

      Disables raid mode on the server.
      When disabled, the server verification levels are set
      back to Low levels and the bot will stop broadcasting
      join messages.


   .. py:method:: raid_strict(self, ctx, *, channel = None)
      :async:

      Enables strict raid mode on the server.
      Strict mode is similar to regular enabled raid mode, with the added
      benefit of auto-banning members that are spamming. The threshold for
      spamming depends on a per-content basis and also on a per-user basis
      of 15 messages per 17 seconds.
      If this is considered too strict, it is recommended to fall back to regular
      raid mode.


   .. py:method:: mentionspam(self, ctx, count = None)
      :async:

      Enables auto-banning accounts that spam mentions.
      If a message contains `count` or more mentions then the
      bot will automatically attempt to auto-ban the member.
      The `count` must be greater than 3.
      If the `count` is 0 then this is disabled (also deletes the data from database).
      This only applies for user mentions. Everyone or Role
      mentions are not included.
      To use this command you must have the Ban Members permission.


   .. py:method:: mentionspam_ignore(self, ctx, *channels)
      :async:

      Specifies what channels ignore mentionspam auto-bans.
      If a channel is given then that channel will no longer be protected
      by auto-banning from mention spammers.
      To use this command you must have the Ban Members permission.


   .. py:method:: mentionspam_unignore(self, ctx, *channels)
      :async:

      Specifies what channels to take off the ignore list.
      To use this command you must have the Ban Members permission.



.. py:function:: setup(bot)
   :async:


