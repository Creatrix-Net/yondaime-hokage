:py:mod:`lib.mendeleev.mendeleev`
=================================

.. py:module:: lib.mendeleev.mendeleev


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   lib.mendeleev.mendeleev.element
   lib.mendeleev.mendeleev.get_all_elements



.. py:function:: element(ids)

   Based on the type of the `ids` identifier return either an
   :py:class:`Element <mendeleev.models.Element>` object from the
   database, or a list of :py:class:`Element <mendeleev.models.Element>`
   objects if the `ids` is a list or a tuple of identifiers. Valid
   identifiers for an element are: *name*, *symbol*, and
   *atomic number*.
   :param ids: element identifier
   :type ids: str

   :raises ValueError: when the identifier is not a list/tuple, int or str

   .. rubric:: Example

   The element can be identified by symbol
   >>> from mendeleev import element
   >>> si = element('Si')
   >>> si.atomic_number
   14
   by the atomic number
   >>> al = element(13)
   >>> al.name
   'Aluminum'
   or by the name
   >>> o = element('Oxygen')
   >>> o.symbol
   'O'
   Mutiple elements can be instantiated simultaneously through as
   combination of identifiers
   >>> c, h, o = element(['C', 'Hydrogen', 8])
   >>> print(c.name, h.name, o.name)
   Carbon Hydrogen Oxygen


.. py:function:: get_all_elements()

   Get all elements as a list


