:py:mod:`badges`
================

.. py:module:: badges


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   badges.BadgesPageEntry
   badges.BadgesCog



Functions
~~~~~~~~~

.. autoapisummary::

   badges.setup



.. py:class:: BadgesPageEntry(entry)

   .. py:attribute:: __slots__
      :annotation: = ['code', 'name', 'file', 'embed']

      

   .. py:method:: __str__(self)

      Return str(self).



.. py:class:: BadgesCog(bot)

   Bases: :py:obj:`discord.ext.commands.Cog`

   The base class that all cogs must inherit from.

   A cog is a collection of commands, listeners, and optional state to
   help group commands together. More information on them can be found on
   the :ref:`ext_commands_cogs` page.

   When inheriting from this class, the options shown in :class:`CogMeta`
   are equally valid here.

   .. py:method:: display_emoji(self)
      :property:


   .. py:method:: remove_white_barcode(img)
      :staticmethod:

      https://stackoverflow.com/questions/765736/using-pil-to-make-all-white-pixels-transparent


   .. py:method:: invert_barcode(img)
      :staticmethod:

      https://stackoverflow.com/questions/765736/using-pil-to-make-all-white-pixels-transparent


   .. py:method:: dl_image(url)
      :staticmethod:
      :async:

      Download bytes like object of user avatar


   .. py:method:: make_template(self, user, badge, template)

      Build the base template before determining animated or not


   .. py:method:: make_animated_gif(template, avatar)
      :staticmethod:

      Create animated badge from gif avatar


   .. py:method:: make_badge(template, avatar)
      :staticmethod:

      Create basic badge from regular avatar


   .. py:method:: create_badge(self, user, badge, is_gif)
      :async:

      Async create badges handler


   .. py:method:: get_badge(badge_name, ctx)
      :staticmethod:
      :async:


   .. py:method:: badges(self, ctx, *, badge)
      :async:

      Creates a fun fake badge based on your discord profile
      `badge` is the name of the badges
      do `[p]listbadges` to see available badges


   .. py:method:: gbadges(self, ctx, *, badge)
      :async:

      Creates a fun fake gif badge based on your discord profile
      this only works if you have a gif avatar
      `badge` is the name of the badges
      do `[p]listbadges` to see available badges


   .. py:method:: listbadges(self, ctx)
      :async:

      List the available badges that can be created



.. py:function:: setup(bot)
   :async:


