:py:mod:`backup`
================

.. py:module:: backup


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   backup.BackUp



Functions
~~~~~~~~~

.. autoapisummary::

   backup.setup



.. py:class:: BackUp(bot)

   Bases: :py:obj:`discord.ext.commands.Cog`

   The base class that all cogs must inherit from.

   A cog is a collection of commands, listeners, and optional state to
   help group commands together. More information on them can be found on
   the :ref:`ext_commands_cogs` page.

   When inheriting from this class, the options shown in :class:`CogMeta`
   are equally valid here.

   .. py:method:: display_emoji(self)
      :property:


   .. py:method:: cleanup(self)
      :async:

      Cleans the redunadant and useless backups


   .. py:method:: backup(self, ctx, command=None)
      :async:

      Backup releated commands


   .. py:method:: channellogs(self, ctx, channel = None, send = None)
      :async:

      Creat a backup of all channel data as json files This might take a long time
      `channel` is partial name or ID of the server you want to backup
      defaults to the server the command was run in


   .. py:method:: serverlogs(self, ctx)
      :async:

      Creat a backup of all server data as json files This might take a long time


   .. py:method:: template(self, ctx)
      :async:

      Create a backup of this guild, (it backups only those channels which is visible to the bot)
      And then dm you the backup code, (Phew keep it safe)


   .. py:method:: get(self, ctx, code)
      :async:

      Gets the json file which is stored as a backup


   .. py:method:: delete(self, ctx, *, args)
      :async:

      Deletes the backup data if it is there in the database.
      This command has a powerful "command line" syntax. To use this command
      you and the bot must both have Manage Server permission. **-all option is optional.**
      The following options are valid.
      `--id` or `-id`: Array of backup id to delete.
      `--all` or `-all`: To delete all backup(s) of the guild.


   .. py:method:: apply(self, ctx, code)
      :async:

      Applies backup template to the server. This may take a lot of time.

      ```
      Note: Some things like role position, some role colours, and some channel positioning may not be applied
      due to Discord limitations, so you may have to fine tune on your own.
      ```


   .. py:method:: attachments(self, ctx, channel = None)
      :async:

      Backups the attachement(s) of the specified channel or channel in which command was run



.. py:function:: setup(bot)
   :async:


