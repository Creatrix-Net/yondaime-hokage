:py:mod:`invites`
=================

.. py:module:: invites


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   invites.Invites



Functions
~~~~~~~~~

.. autoapisummary::

   invites.setup



Attributes
~~~~~~~~~~

.. autoapisummary::

   invites.POLL_PERIOD


.. py:data:: POLL_PERIOD
   :annotation: = 25

   

.. py:class:: Invites(bot)

   Bases: :py:obj:`discord.ext.commands.Cog`

   The base class that all cogs must inherit from.

   A cog is a collection of commands, listeners, and optional state to
   help group commands together. More information on them can be found on
   the :ref:`ext_commands_cogs` page.

   When inheriting from this class, the options shown in :class:`CogMeta`
   are equally valid here.

   .. py:method:: display_emoji(self)
      :property:


   .. py:method:: __ainit__(self)
      :async:


   .. py:method:: cog_unload(self)

      |maybecoro|

      A special method that is called when the cog gets removed.

      Subclasses must replace this if they want special unloading behaviour.

      .. versionchanged:: 2.0

          This method can now be a :term:`coroutine`.


   .. py:method:: delete_expired(self)
      :async:


   .. py:method:: wait_for_list(self)
      :async:


   .. py:method:: update_invite_expiry(self)
      :async:


   .. py:method:: delete_invite(self, invite)


   .. py:method:: get_invite(self, code)


   .. py:method:: get_invites(self, guild_id)


   .. py:method:: wait_for_invites(self)
      :async:


   .. py:method:: fetch_invites(guild)
      :staticmethod:
      :async:


   .. py:method:: _schedule_deletion(self, guild)
      :async:


   .. py:method:: on_invite_create(self, invite)
      :async:


   .. py:method:: on_invite_delete(self, invite)
      :async:


   .. py:method:: on_guild_channel_delete(self, channel)
      :async:


   .. py:method:: on_guild_join(self, guild)
      :async:


   .. py:method:: on_guild_available(self, guild)
      :async:


   .. py:method:: on_guild_remove(self, guild)
      :async:


   .. py:method:: on_member_join(self, member)
      :async:


   .. py:method:: invitestats(self, ctx)
      :async:

      Displays the top 10 most used invites in the guild.



.. py:function:: setup(bot)
   :async:


